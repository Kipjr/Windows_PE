# This workflow will build winpe then publish a package to GitHub Packages when a release is created
# 
name: Create WinPE_amd64.iso
# Controls when the workflow will run
#on:
  # Triggers the workflow on push or pull request events but only for the master branch
  # push:
  #   branches: [ master ]
  # pull_request:
  #  branches: [ master ]
on:
  release:
    types: [created]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # test:
    # name: PSScriptAnalyzer
    # runs-on: ubuntu-latest
    # steps:
      # - uses: actions/checkout@v2
      # - name: Run PSScriptAnalyzer # Check https://github.com/microsoft/action-psscriptanalyzer
        # uses: microsoft/psscriptanalyzer-action@v1.0
        # with:
          # path: .\
          # recurse: true 
          # includeRule: '"PSAvoidGlobalAliases", "PSAvoidUsingConvertToSecureStringWithPlainText"'
          # output: results.sarif
      # - name: Upload SARIF results file
        # uses: github/codeql-action/upload-sarif@v1
        # with:
          # sarif_file: results.sarif


  build:
    runs-on: windows-latest
    # needs: test
    steps:
      - name: Install Choco
        shell: pwsh
        run: |
          if(test-path -path "$env:ALLUSERSPROFILE\chocolatey\choco.exe"){Write-Output "Choco is already installed"} else {
            [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072
            Invoke-Expression ((New-Object System.Net.WebClient).DownloadString('https://community.chocolatey.org/install.ps1'))
          }
      - name: Install ADK
        shell: pwsh
        run: choco install windows-adk-all  -y # https://go.microsoft.com/fwlink/?linkid=2165884
      - name: Checkout
        uses: actions/checkout@v3
      - name: Build the WinPE image
        shell: pwsh
        run: .\New-WinPEImage.ps1
      - name: Generate filelist
        shell: pwsh
        run: |
          get-childitem . -Recurse -File | select @{n="File";e={$_.Fullname| Resolve-Path -Relative }}, @{n="SHA256_filehash";e={ ($_.fullname | Get-FileHash -Algorithm SHA256).hash }} | Export-Csv -Path .\filelist.csv -Delimiter ";"
      - name: upload artifact
        uses: actions/upload-artifact@v3
        if:  ${{ ! startsWith(github.ref, 'refs/tags/') }}
        with:
          name: WinPE_amd64.iso
          path: |
            .\WinPE_amd64.iso
            .\filelist.csv
          if-no-files-found: error
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            .\WinPE_amd64.iso
            .\filelist.csv
